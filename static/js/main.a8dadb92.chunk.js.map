{"version":3,"sources":["Components/Header.js","Components/ModalEdit.js","Components/Note.js","Components/Notes.js","Components/Input.js","App.js","index.js"],"names":["Header","setSearchTag","inputRef","useRef","className","type","placeholder","ref","onClick","current","value","ModalEdit","setVisibleModal","note","saveEditedNote","useState","editNote","setEditNote","inputTagRef","event","stopPropagation","text","onChange","e","prev","target","preventDefault","reg","RegExp","newTags","split","tags","filter","item","test","map","tag","tg","Note","index","compliteNote","removeNote","visibleModal","useEffect","document","body","style","overflow","complited","textDecoration","id","Notes","notes","Input","addNote","setValue","onSubmit","trim","alert","App","setNotes","searchTag","console","log","localStorage","getItem","setItem","JSON","parse","searchedNotes","searchNotes","forEach","push","getSearchedNotes","stringify","Date","valueOf","length","editedNote","i","isComplited","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8dadb92.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\n\r\nconst Header = ( {setSearchTag}) => {\r\n    const inputRef = useRef()\r\n\r\n    const search = () => {\r\n        setSearchTag(inputRef.current.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__wrapper\">\r\n                <h1>Notes</h1>\r\n                <div className=\"header__search\">\r\n                    <input className=\"header__input\" type=\"text\" \r\n                        placeholder=\"Поиск по тегу\"\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"header__btn\" onClick={search}>\r\n                        Поиск\r\n                    </button>\r\n                </div>\r\n                \r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import userEvent from '@testing-library/user-event'\r\nimport React, { useState, useRef } from 'react'\r\n\r\nconst ModalEdit = ( {setVisibleModal, note, saveEditedNote} ) => {\r\n    const [editNote, setEditNote] = useState(note)\r\n    const inputTagRef = useRef()\r\n\r\n    const removeTag = (tg) => {\r\n        setEditNote(prev => {\r\n            return {...prev, tags: prev.tags.filter(tag => tag !== tg)}\r\n        })\r\n    }\r\n\r\n    const addTags = (e) => {\r\n        e.preventDefault()\r\n\r\n        const reg = new RegExp(\"^#\\w*\");\r\n        const newTags = inputTagRef.current.value.split(' ')\r\n\r\n        setEditNote(prev => ({...prev, tags: [...prev.tags, ...newTags.filter(item => reg.test(item) && item)]}))\r\n        inputTagRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\" onClick={() => setVisibleModal(false)}> \r\n            <div className=\"modal__wrapper\" onClick={event => event.stopPropagation()}>\r\n                <div className=\"modal__close\" onClick={() => setVisibleModal(false)}>X</div>\r\n                <div className=\"modal__content\">\r\n                    <h2>Редактирование заметки</h2>\r\n                    <input className=\"modal__input\"\r\n                        value={editNote.text}\r\n                        onChange={e => setEditNote(prev => ({...prev, text: e.target.value}))}\r\n                    />\r\n                    <div className=\"modal__tagedit\">\r\n                        <p></p>\r\n                        <input className=\"modal__input\" \r\n                            ref={inputTagRef}\r\n                            placeholder='Введите тэги, которые нужно добавить'\r\n                        />\r\n                        <button className=\"modal__btn\" onClick={addTags}>Добавить</button>\r\n                    </div>\r\n                    \r\n\r\n                    <p>Кликните на тэги, которые нужно удалить</p>\r\n                    <div className=\"note__tags\">\r\n                        {editNote.tags && editNote.tags.map(tag => (\r\n                            <span className=\"note__tag\" onClick={() => removeTag(tag)} key={tag}>\r\n                                {tag}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                    <button className=\"modal__btn\"\r\n                        onClick={() => {\r\n                                saveEditedNote(editNote)\r\n                                setVisibleModal(false)\r\n                            }}\r\n                    >\r\n                        Сохранить\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalEdit\r\n","import React, { useState, useEffect } from 'react'\r\nimport ModalEdit from './ModalEdit'\r\n\r\nconst Note = ( {note, index, compliteNote, removeNote, saveEditedNote} ) => {\r\n    const [visibleModal, setVisibleModal] = useState(false)\r\n    let currnetNote = ''\r\n\r\n    useEffect(() => {\r\n        visibleModal ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'auto'\r\n    }, [visibleModal])\r\n\r\n    return (\r\n    <>\r\n            <div className=\"note\" onClick={() => {compliteNote(index, note.complited)}} key={note.id}>\r\n                <div className=\"note__wrapper\">\r\n                    {visibleModal && <ModalEdit saveEditedNote={saveEditedNote} setVisibleModal={setVisibleModal} note={note}/>}\r\n                    <div className=\"note__info\">\r\n                        <div className={note.complited ? \"note__text complited\" : \"note__text\"}>\r\n                            {index + 1}. {note.text}\r\n                        </div>\r\n                        <div className=\"note__tags\">\r\n                            {note.tags.map(tag => (\r\n                                <span className=\"note__tag\" style={{textDecoration: 'none'}}>\r\n                                    {tag}\r\n                                </span>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"note__buttons\">\r\n                        <button className=\"note__btn\"\r\n                            onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    setVisibleModal(true)\r\n                                }\r\n                            }\r\n                        >\r\n                            Редактировать\r\n                        </button>\r\n                        <button className=\"note__btn\"\r\n                            onClick={() => {removeNote(note.id)}}\r\n                        >\r\n                            Удалить\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React, { useState, useEffect } from 'react'\r\nimport ModalEdit from './ModalEdit'\r\nimport Note from './Note'\r\n\r\nconst Notes = ( {notes, compliteNote, removeNote, saveEditedNote} ) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notes\">\r\n            <div className=\"notes__wrapper\">\r\n                {notes.map((note, index) => (\r\n                    <Note key={note.id} note={note} index={index} compliteNote={compliteNote} removeNote={removeNote} saveEditedNote={saveEditedNote}/>\r\n                ))}\r\n            </div>                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import React, { useState } from 'react'\r\n\r\nconst Input = ( { addNote } ) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const createNote = e => {\r\n        e.preventDefault()\r\n        \r\n        if (value.trim()) {\r\n            addNote(value)\r\n            setValue('')\r\n        } else {\r\n            alert('Заполните поле!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input\">\r\n            <div className=\"input__wrapper\">\r\n                <form className=\"input__body\"\r\n                    onSubmit={createNote}\r\n                >\r\n                    <input type=\"text\"\r\n                        placeholder=\"Введите текст заметки (вы может здесь вводить теги, они атоматически добавятся)\" \r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                    />\r\n                    <button className=\"input__button\" type=\"submit\">\r\n                        Создать\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, {useState, useEffect} from 'react'\r\nimport Header from './Components/Header'\r\nimport Notes from './Components/Notes'\r\nimport Input from './Components/Input'\r\nimport './Sass/main.scss'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [searchTag, setSearchTag] = useState('')\r\n  console.log(123);\r\n  !localStorage.getItem('notes') && localStorage.setItem('notes', [])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setNotes(JSON.parse(localStorage.getItem('notes')))\r\n    } catch{}\r\n  }, []) \r\n\r\n  function getSearchedNotes() {\r\n    if (searchTag) {\r\n      const searchNotes = []\r\n\r\n      notes.forEach(note => {\r\n        note.tags.forEach(tag => {\r\n          if (tag === searchTag) {\r\n            searchNotes.push(note)\r\n          }\r\n        })\r\n      })\r\n      return searchNotes\r\n    } else {\r\n      return notes\r\n    }\r\n  }\r\n\r\n  const searchedNotes = getSearchedNotes()\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('notes', JSON.stringify(notes))\r\n  }, [notes])\r\n\r\n  const compliteNote = (index, isComplited) => {\r\n    index &&\r\n    setNotes(prev => {\r\n      prev[index].complited = !isComplited\r\n      return [...prev]\r\n    })\r\n  }\r\n  \r\n  const addNote = text => {\r\n    var reg = new RegExp(\"^#\\w*\");\r\n\r\n    let note = {\r\n      id: new Date().valueOf(),\r\n      text: text.split('#')[0],\r\n      complited: false,\r\n      tags: text.split(' ').filter(item => reg.test(item) && item)\r\n    }\r\n\r\n    setNotes([ note, ...notes])\r\n  }\r\n\r\n  const removeNote = id => {\r\n    setNotes(notes.filter(note => note.id !== id))\r\n  }\r\n\r\n  const saveEditedNote = editedNote => {\r\n    setNotes(prev => {\r\n      for (let i = 0; i < prev.length; i++) {\r\n        if (prev[i].id === editedNote.id) {\r\n          prev[i] = editedNote\r\n          return ([...prev])\r\n        }\r\n      }\r\n    })\r\n   \r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header setSearchTag={setSearchTag}/>\r\n      <div className=\"page__wrapper\">\r\n        <Input addNote={addNote}/>\r\n        {searchedNotes.length === 0 && searchTag \r\n          ? \r\n            <div className=\"page__error\">\r\n              <h2> Ничего не найденно </h2> \r\n            </div>\r\n          : \r\n            ''}\r\n        { notes.length > 0 \r\n          ? \r\n            <Notes notes={searchedNotes} saveEditedNote={saveEditedNote} removeNote={removeNote} compliteNote={compliteNote}/> : \r\n            <div className=\"page__error\">\r\n              <h2> Заметок нет </h2> \r\n              <p>создайте заметку</p>\r\n            </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}